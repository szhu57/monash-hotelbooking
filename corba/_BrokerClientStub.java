package corba;


/**
* corba/_BrokerClientStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from BrokerClient.idl
* Thursday, May 14, 2015 9:01:16 PM CST
*/

public class _BrokerClientStub extends org.omg.CORBA.portable.ObjectImpl implements corba.BrokerClient
{

  public String[] listRoom (String city, String hotel)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listRoom", true);
                $out.write_string (city);
                $out.write_string (hotel);
                $in = _invoke ($out);
                String $result[] = corba.roomrateHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listRoom (city, hotel        );
            } finally {
                _releaseReply ($in);
            }
  } // listRoom

  public double bookRoom (String city, String hotel, String type, String checkin, String checkout)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bookRoom", true);
                $out.write_string (city);
                $out.write_string (hotel);
                $out.write_string (type);
                $out.write_string (checkin);
                $out.write_string (checkout);
                $in = _invoke ($out);
                double $result = $in.read_double ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bookRoom (city, hotel, type, checkin, checkout        );
            } finally {
                _releaseReply ($in);
            }
  } // bookRoom

  public String insertInfo (String id, String name, String cno, String email, String hotel)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertInfo", true);
                $out.write_string (id);
                $out.write_string (name);
                $out.write_string (cno);
                $out.write_string (email);
                $out.write_string (hotel);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return insertInfo (id, name, cno, email, hotel        );
            } finally {
                _releaseReply ($in);
            }
  } // insertInfo

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:corba/BrokerClient:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _BrokerClientStub
